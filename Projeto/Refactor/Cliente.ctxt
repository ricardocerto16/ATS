#BlueJ class context
comment0.target=Cliente
comment1.params=
comment1.target=Cliente()
comment1.text=Construtor\ Vazio.
comment10.params=
comment10.target=Cliente\ clone()
comment10.text=\n\ Cria\u00E7\u00E3o\ de\ uma\ c\u00F3pia.\n\ @return\n
comment11.params=c
comment11.target=int\ compareTo(Cliente)
comment11.text=\n\ Implementa\u00E7\u00E3o\ da\ ordem\ natural\ entre\ inst\u00E2ncias\ de\ Cliente.\n\ @param\ c\n
comment2.params=c
comment2.target=Cliente(Cliente)
comment2.text=\n\ Construtor\ por\ c\u00F3pia.\n\ @param\ c\n
comment3.params=email\ nome\ pw\ morada\ dDN\ historico\ ms
comment3.target=Cliente(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.util.Set,\ double)
comment3.text=\n\ Construtor\ param\u00E9trico.\n\ @param\ email\n\ @param\ nome\n\ @param\ pw\n\ @param\ morada\n\ @param\ dDN\n\ @param\ historico\n\ @param\ ms\n
comment4.params=email\ nome\ pw\ morada\ dDN
comment4.target=Cliente(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment4.text=\n\ Construtor\ param\u00E9trico\ parcial.\n\ @param\ email\n\ @param\ nome\n\ @param\ pw\n\ @param\ morada\n\ @param\ dDN\n
comment5.params=
comment5.target=double\ getMS()
comment5.text=\n\ Devolve\ a\ quantidade\ de\ dinheiro\ gasto\ pelo\ cliente.\n\ @return\n
comment6.params=ms
comment6.target=void\ setMS(double)
comment6.text=\n\ Define\ a\ quantidade\ de\ dinheiro\ gasto\ pelo\ cliente.\n\ @param\ ms\n
comment7.params=o
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ Igualdade\ com\ outro\ objeto.\n\ @param\ o\n\ @return\n
comment8.params=
comment8.target=int\ hashCode()
comment8.text=\n\ Determina\ o\ c\u00F3digo\ de\ hash\ do\ objeto.\n\ @return\n
comment9.params=
comment9.target=java.lang.String\ toString()
comment9.text=\n\ Representa\u00E7\u00E3o\ no\ formato\ texto.\n\ @return\n
numComments=12
