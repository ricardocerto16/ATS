#BlueJ class context
comment0.target=Veiculo
comment1.params=
comment1.target=Veiculo()
comment1.text=\n\ Construtor\ vazio.\ Cria\ uma\ inst\u00E2ncia\ de\ Veiculo.\n
comment10.params=
comment10.target=boolean\ getOcupado()
comment10.text=\n\ Obter\ a\ ocupa\u00E7\u00E3o\ do\ ve\u00EDculo.\n\ @return\n
comment11.params=velocidademedia
comment11.target=void\ setVelocidadeMedia(int)
comment11.text=\n\ Definir\ a\ velocidade\ m\u00E9dia/km\ do\ ve\u00EDculo.\n\ @param\ vm\n
comment12.params=precobase
comment12.target=void\ setPrecoBase(double)
comment12.text=\n\ Definir\ o\ pre\u00E7o\ base\ por\ km\ do\ ve\u00EDculo.\n\ @param\ pb\n
comment13.params=fiabilidade
comment13.target=void\ setFiabilidade(int)
comment13.text=\n\ Definir\ a\ fiabilidade\ do\ ve\u00EDculo.\n\ @param\ fiabilidade\n
comment14.params=matricula
comment14.target=void\ setMatricula(java.lang.String)
comment14.text=\n\ Definir\ a\ matr\u00EDcula\ do\ ve\u00EDculo.\n\ @param\ matricula\n
comment15.params=coordenadas
comment15.target=void\ setCoordenadas(Coordenada)
comment15.text=\n\ Definir\ as\ coordenadas\ do\ ve\u00EDculo\n\ @param\ coordenadas\n
comment16.params=ocupado
comment16.target=void\ setOcupado(boolean)
comment16.text=\n\ Definir\ a\ ocupa\u00E7\u00E3o\ do\ ve\u00EDculo.\n\ @param\ ocupado\n
comment17.params=o
comment17.target=boolean\ equals(java.lang.Object)
comment17.text=\n\ Compara\ a\ igualdade\ com\ outro\ objecto.\n\ @param\ o\n\ @return\ \n
comment18.params=
comment18.target=Veiculo\ clone()
comment18.text=\n\ Implementa\u00E7\u00E3o\ de\ clone.\n\ @return\n
comment19.params=
comment19.target=java.lang.String\ toString()
comment19.text=\n\ Devolve\ uma\ representa\u00E7\u00E3o\ em\ formato\ de\ texto.\n\ @return\ \n
comment2.params=velocidademedia\ precobase\ fiabilidade\ matricula\ coordenadas\ lugares\ ocupado
comment2.target=Veiculo(int,\ double,\ int,\ java.lang.String,\ Coordenada,\ int,\ boolean)
comment2.text=\n\ Construtor\ por\ par\u00E2metro.\n\ @param\ velocidademedia\n\ @param\ precobase\n\ @param\ fiabilidade\n\ @param\ matricula\n\ @param\ coordenadas\n\ @param\ lugares\n\ @param\ ocupado\n
comment20.params=
comment20.target=int\ hashCode()
comment20.text=\n\ C\u00F3digo\ de\ hash\n\ @return\ hashcode.\n
comment21.params=v
comment21.target=int\ compareTo(Veiculo)
comment21.text=\n\ Implementa\u00E7\u00E3o\ da\ ordem\ natural\ de\ compara\u00E7\u00E3o\ de\ inst\u00E2ncias\ de\ Ve\u00EDculo.\n\n
comment3.params=v
comment3.target=Veiculo(Veiculo)
comment3.text=\n\ Construtor\ por\ c\u00F3pia.\n\ @param\ v\n
comment4.params=
comment4.target=int\ getVelocidadeMedia()
comment4.text=\n\ Obter\ a\ velocidade\ m\u00E9dia\ por\ km\ do\ ve\u00EDculo.\n\ @return\n
comment5.params=
comment5.target=double\ getPrecoBase()
comment5.text=\n\ Obter\ o\ pre\u00E7o\ base\ por\ km\ do\ ve\u00EDculo.\n\ @return\n
comment6.params=
comment6.target=int\ getFiabilidade()
comment6.text=\n\ Obter\ a\ fiabilidade\ do\ ve\u00EDculo.\n\ @return\n
comment7.params=
comment7.target=java.lang.String\ getMatricula()
comment7.text=\n\ Obter\ a\ matr\u00EDcula\ do\ ve\u00EDculo.\n\ @return\n
comment8.params=
comment8.target=Coordenada\ getCoordenadas()
comment8.text=\n\ Obter\ as\ coordenadas\ do\ ve\u00EDculo.\n\ @return\ \n
comment9.params=
comment9.target=int\ getLugares()
comment9.text=\n\ Obter\ os\ lugares\ do\ ve\u00EDculo.\n\ @return\n
numComments=22
