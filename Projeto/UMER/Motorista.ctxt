#BlueJ class context
comment0.target=Motorista
comment1.params=
comment1.target=Motorista()
comment1.text=\n\ Construtor\ Vazio\n
comment10.params=disp
comment10.target=void\ setDisponibilidade(boolean)
comment10.text=\n\ Define\ a\ disponibilizade\ do\ motorista.\n\ @param\ disp\n
comment11.params=
comment11.target=Veiculo\ getVeiculo()
comment11.text=\n\ Devolve\ o\ ve\u00EDculo\ utilizado\ pelo\ motorista.\n\ @return\n
comment12.params=v
comment12.target=void\ setVeiculo(Veiculo)
comment12.text=\n\ Define\ o\ ve\u00EDculo\ utilizado\ pelo\ motorista.\n\ @param\ v\n
comment13.params=classi
comment13.target=void\ atualizaClassificacao(int)
comment13.text=\n\ Recebe\ uma\ nova\ classifica\u00E7\u00E3o.\n\ @param\ classi\n
comment14.params=distancia
comment14.target=double\ tempoViagem(double)
comment14.text=\n\ Dada\ uma\ dist\u00E2ncia,\ \u00E9\ estimado\ o\ tempo\ total\ de\ viagem.\n\ @param\ distancia\ ->\ Em\ km\n\ @return\n
comment15.params=dist
comment15.target=double\ precoViagem(double)
comment15.text=\n\ Dada\ a\ dist\u00E2ncia\ da\ viagem,\ determina\ o\ pre\u00E7o\ total\ a\ pagar.\n\ @param\ dist\ ->\ Em\ km\n\ @return\n
comment16.params=novaLoc\ distPercorrida\ fiabilidade\ dif
comment16.target=void\ atualizaDados(Coordenada,\ double,\ double,\ double)
comment16.text=\n\ Atualiza\ a\ informa\u00E7\u00E3o\ do\ motorista\ ap\u00F3s\ uma\ viagem.\n\ @param\ novaLoc\n\ @param\ distPercorrida\n\ @param\ fiabilidade\n\ @param\ dif\n
comment17.params=
comment17.target=double\ totalFaturado()
comment17.text=\n\ Montante\ faturado\ pelo\ motorista\ na\ UMeR,\ at\u00E9\ ao\ momento.\n\ @return\n
comment18.params=inicio\ fim
comment18.target=double\ totalFaturado(java.util.GregorianCalendar,\ java.util.GregorianCalendar)
comment18.text=\n\ Montante\ faturado\ pelo\ motorista,\ entre\ datas,\ na\ UMeR.\n\ @param\ inicio\n\ @param\ fim\n\ @return\n
comment19.params=o
comment19.target=boolean\ equals(java.lang.Object)
comment19.text=\n\ Compara\u00E7\u00E3o\ com\ outro\ Objeto.\n\ @param\ Object\ o\n\ @return\ boolean\ a\ indicar\ se\ \u00E9\ igual\ ao\ n\u00E3o\ a\ 'o'.\n
comment2.params=m
comment2.target=Motorista(Motorista)
comment2.text=\n\ Construtor\ por\ c\u00F3pia.\n\ @param\ Motorista\ m\n
comment20.params=
comment20.target=int\ hashCode()
comment20.text=\n\ Determina\ o\ c\u00F3digo\ de\ hash\ do\ objeto\n\ @return\ int\n
comment21.params=
comment21.target=java.lang.String\ toString()
comment21.text=\n\ Representa\u00E7\u00E3o\ textual.\n\ @return\n
comment22.params=
comment22.target=Motorista\ clone()
comment22.text=\n\ M\u00E9todo\ clone.\n
comment23.params=m
comment23.target=int\ compareTo(Motorista)
comment23.text=\n\ Implementa\u00E7\u00E3o\ da\ ordem\ natural\ entre\ inst\u00E2ncias\ de\ Motorista.\n\ @param\ m\n
comment3.params=email\ nome\ pw\ morada\ dDN\ hv\ grau\ classificacao\ numClassi\ kmsTotais\ disponivel\ taxi
comment3.target=Motorista(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.util.Set,\ int,\ int,\ int,\ double,\ boolean,\ Veiculo)
comment3.text=\n\ Construtor\ param\u00E9trico.\n\ @param\ email\n\ @param\ nome\n\ @param\ pw\ \=\ password\n\ @param\ morada\n\ @param\ dDN\ \=\ Data\ de\ nascimento\n\ @param\ hv\n\ @param\ grau\n\ @param\ classificacao\n\ @param\ numClassi\n\ @param\ kmsTotais\n\ @param\ disponivel\n\ @param\ taxi\n
comment4.params=email\ nome\ pw\ morada\ dDN\ taxi
comment4.target=Motorista(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ Veiculo)
comment4.text=\n\ Construtor\ param\u00E9trico\ parcial.\n\ @param\ email\n\ @param\ nome\n\ @param\ pw\ \=\ password\n\ @param\ morada\n\ @param\ dDN\ \=\ Data\ de\ nascimento\n\ @param\ taxi\n
comment5.params=
comment5.target=int\ getGrau()
comment5.text=\n\ Devolve\ o\ grau\ de\ cumprimento\ de\ hor\u00E1rio\ do\ motorista.\n\ @return\ \n
comment6.params=
comment6.target=int\ getClassificacao()
comment6.text=\n\ Devolve\ a\ classifica\u00E7\u00E3o\ do\ motorista.\n\ @return\ \n
comment7.params=
comment7.target=int\ getNumClassi()
comment7.text=\n\ Devolve\ o\ n\u00FAmero\ de\ classifica\u00E7\u00E3o\ a\ que\ o\ motorista\ foi\ sujeito\ at\u00E9\ ao\ momento.\n\ @return\n
comment8.params=
comment8.target=double\ getKmsTotais()
comment8.text=\n\ Devolve\ os\ kms\ realizados\ na\ UMeR\ at\u00E9\ ao\ momento.\n\ @return\ \n
comment9.params=
comment9.target=boolean\ getDisponibilidade()
comment9.text=\n\ Devolve\ a\ disponibilidade\ do\ motorista.\n\ @return\ \n
numComments=24
